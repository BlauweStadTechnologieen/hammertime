Param(
 [string]	$resourceGroup = "TradeviewEquinixLondon",
 [String] 	$VMName ="BlueCityCapital", ##In In Resource Group "TradeviewEquinixLondon"
 [string]	$method = "UA",
 [string]	$UAMI = "managed-identity" ##In Resource Group "TradeviewEquinixLondon"
)

$automationAccount = "mi-automation-account" ##In In Resource Group "TradeviewEquinixLondon"

# Ensures you do not inherit an AzContext in your runbook
Disable-AzContextAutosave -Scope Process | Out-Null

# Connect using a Managed Service Identity
try {
        $AzureContext = (Connect-AzAccount -Identity).context
    }
catch{
        Write-Output "There is no system-assigned user identity. Aborting."; 
        exit
    }

# set and store context
$AzureContext = Set-AzContext -SubscriptionName $AzureContext.Subscription `
    -DefaultProfile $AzureContext

if ($method -eq "SA")
    {
        Write-Output "Using system-assigned managed identity"
    }
elseif ($method -eq "UA")
    {
        Write-Output "Using user-assigned managed identity"

        # Connects using the Managed Service Identity of the named user-assigned managed identity
        $identity = Get-AzUserAssignedIdentity -ResourceGroupName $resourceGroup `
            -Name $UAMI -DefaultProfile $AzureContext

        # validates assignment only, not perms
        if ((Get-AzAutomationAccount -ResourceGroupName $resourceGroup `
                -Name $automationAccount `
                -DefaultProfile $AzureContext).Identity.UserAssignedIdentities.Values.PrincipalId.Contains($identity.PrincipalId))
            {
                $AzureContext = (Connect-AzAccount -Identity -AccountId $identity.ClientId).context

                # set and store context
                $AzureContext = Set-AzContext -SubscriptionName $AzureContext.Subscription -DefaultProfile $AzureContext
            }
        else {
                Write-Output "Invalid or unassigned user-assigned managed identity"
                exit
            }
    }
else {
        Write-Output "Invalid method. Choose UA or SA."
        exit
     }

# Get current state of VM
$status = (Get-AzVM -ResourceGroupName $resourceGroup -Name $VMName `
    -Status -DefaultProfile $AzureContext).Statuses[1].Code

Write-Output "`r`n Beginning VM status: $status `r`n"

# Start or stop VM based on current state
if($status -eq "Powerstate/deallocated")
    {
        
        Start-AzVM -Name $VMName -ResourceGroupName $resourceGroup -DefaultProfile $AzureContext

    }
elseif ($status -eq "Powerstate/running")
    {
        
        Stop-AzVM -Name $VMName -ResourceGroupName $resourceGroup -DefaultProfile $AzureContext -Force

    }

# Get new state of VM
$status = (Get-AzVM -ResourceGroupName $resourceGroup -Name $VMName -Status `
    -DefaultProfile $AzureContext).Statuses[1].Code  

Write-Output "`r`n Ending VM status: $status `r`n `r`n"

Write-Output "Account ID of current context: " $AzureContext.Account.Id

$Username ="todd.gilbey@bluecitycapital.com"

$Password = ConvertTo-SecureString "KECLrAjG9v3PtgdI" -AsPlainText -Force

$credential = New-Object System.Management.Automation.PSCredential $Username, $Password

$SMTPServer = "smtp-relay.sendinblue.com"

$EmailFrom = "Hello from Blue City CapitalÂ® <notifications@bluecitycapital.com>"

[string[]]$EmailTo = "Todd Gilbey <todd.gilbey@bluecitycapital.com>"

$Subject = "Important Notification"

$Body = "Dear User<br>We'd like to let you know that your Virtual Machine $VMName has a new status update: $status.
        <br><br>If you were expecting this notification, please disregard this email.
        <br><br>If you need any further assistance, please contact on <a href='mailto:hello@bluecitycapital.com'>the system administrator.</a><br><br>Yours Sincerely<br><br>The Technical Design Team<br>Blue City Capital Techologies, INC
        <br><br>When using the <a href ='https://www.bloomberg.com/markets/economic-calendar'>Bloomberg Calendar</a> please ensure you use the GMT + 1:00 Dublin, Edinburgh, Lisbon, London Time Adjustment. 
        <br><br>Click here to gain access to <a href ='https://www.bloomberg.com/live/us'>Bloomberg Live Television (USA)</a>.
        <br><br>Click here to gain access to <a href ='https://www.bloomberg.com/live/europe'>Bloomberg Live Television (Europe)</a>.
		<br><br>To login to your Tradeview Account, <a href ='https://www.tradeviewforex.com/cabinet/mt4'>click here</a>.
        <br><br>Please ensure that 'Allow DLL Imports' & 'Allow Import of External Experts' are turned on, or the EA will not execute positions.
        <br><br>The EX4 file as well as the MQL4 file are both required. 
		<br><br><b><u>Announcements</u></b>
        <br><br>We now have a new SMTP transactional message provider <a href = 'https://www.brevo.com/'>SendInBlue/Brevo</a>. You will not see any differences in the messages you receive.
		<br><br>We now have a new Powershell command. We now have Powershell script which controls the starting as well as the shutting down of the Virtual Machine.
        <br><br>If you wish to close down this VM, please <a href = 'https://portal.azure.com/#@bluecitycapital.com/resource/subscriptions/3d24b7aa-7904-4f90-9d3d-851147d97ab2/resourceGroups/TradeviewEquinixLondon/providers/Microsoft.Automation/automationAccounts/mi-automation-account/runbooks/mi-vm-command/overview'>log on to the Azure Portal</a> using your administrator account,
        <br>
        <br><br>=========================================================================================================================================================================================================
        <br><br>This is an automated email which as been sent from an unmonitored address. Please do not reply to this message.
        <br><br>If you have received this message in error, it is important that you let us know immediately. Please forward this message to <a href='mailto:hello@bluecitycapital.com'>the Compliance Team</a> so we can remove your email address from our system.
        <br><br><b>Blue City Capital Techologies, Inc, 8 The Green Dover, Kent County, DE 19901</b>"

        Send-MailMessage -smtpServer $SMTPServer -Credential $credential -Usessl -Port 587 -from $EmailFrom -to $EmailTo -subject $Subject -Body $Body -BodyAsHtml